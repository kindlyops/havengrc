version: 2
jobs:
  webui-build-job:
    docker:
      - image: circleci/node:7-browsers
    steps:
      - checkout
      - run:
          name: notify build started
          command: ./notify-slack notifications "CircleCI starting pipeline for $CIRCLE_PULL_REQUEST" circleci
      - add_ssh_keys
      - run:
          name: Check docker version
          command: docker -v
      - restore_cache:
          key: sysconfcpu
      - run:
          name: Install sysconfcpus
          command: |
            if [ ! -d $HOME/sysconfcpus/bin ];
            then
              git clone https://github.com/obmarg/libsysconfcpus.git;
              cd libsysconfcpus;
              ./configure --prefix="$HOME/sysconfcpus";
              make && make install;
              cd ..;
            fi
      - save_cache:
          key: sysconfcpu
          paths:
            - ../sysconfcpus
      - restore_cache:
          key: dependency-cache-{{ checksum "webui/package.json" }}
      - run:
          name: Install Elm system with npm
          command: npm install --only=dev
          no_output_timeout: 15m
          working_directory: webui
      - save_cache:
          key: dependency-cache-{{ checksum "webui/package.json" }}
          paths:
            - ./webui/node_modules
      - run:
          name: compile Elm project
          command: $HOME/sysconfcpus/bin/sysconfcpus -n 2 npm run-script build
          no_output_timeout: 20m
          working_directory: webui
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker build -t kindlyops/havenweb:latest webui
      - run: docker tag kindlyops/havenweb:latest kindlyops/havenweb:$CIRCLE_SHA1
      - run: docker tag kindlyops/havenweb:latest kindlyops/havenweb:$CIRCLE_BUILD_NUM
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push kindlyops/havenweb:$CIRCLE_SHA1
      - run: docker push kindlyops/havenweb:$CIRCLE_BUILD_NUM
      - run: docker push kindlyops/havenweb:latest
      - run:
          name: notify failed job
          command: ./notify-slack notifications "CircleCI pipeline for $CIRCLE_PULL_REQUEST failed in $CIRCLE_JOB" circleci
          when: on_fail
  flyway-build-job:
    docker:
      - image: circleci/openjdk:9
    steps:
      - checkout
      - add_ssh_keys
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker build -t kindlyops/havenflyway:latest flyway
      - run: docker tag kindlyops/havenflyway:latest kindlyops/havenflyway:$CIRCLE_SHA1
      - run: docker tag kindlyops/havenflyway:latest kindlyops/havenflyway:$CIRCLE_BUILD_NUM
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push kindlyops/havenflyway:$CIRCLE_SHA1
      - run: docker push kindlyops/havenflyway:$CIRCLE_BUILD_NUM
      - run: docker push kindlyops/havenflyway:latest
      - run:
          name: notify failed job
          command: ./notify-slack notifications "CircleCI pipeline for $CIRCLE_PULL_REQUEST failed in $CIRCLE_JOB" circleci
          when: on_fail
  postgrest-build-job:
    docker:
      - image: circleci/openjdk:9
    steps:
      - checkout
      - add_ssh_keys
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker build -t kindlyops/postgrest:latest -f postgrest/Dockerfile .
      - run: docker tag kindlyops/postgrest:latest kindlyops/postgrest:$CIRCLE_SHA1
      - run: docker tag kindlyops/postgrest:latest kindlyops/postgrest:$CIRCLE_BUILD_NUM
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push kindlyops/postgrest:$CIRCLE_SHA1
      - run: docker push kindlyops/postgrest:$CIRCLE_BUILD_NUM
      - run: docker push kindlyops/postgrest:latest
      - run:
          name: notify failed job
          command: ./notify-slack notifications "CircleCI pipeline for $CIRCLE_PULL_REQUEST failed in $CIRCLE_JOB" circleci
          when: on_fail
  keycloak-build-job:
    docker:
      - image: circleci/openjdk:9
    steps:
      - checkout
      - add_ssh_keys
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker build -t kindlyops/keycloak:latest -f keycloak/Dockerfile .
      - run: docker tag kindlyops/keycloak:latest kindlyops/keycloak:$CIRCLE_SHA1
      - run: docker tag kindlyops/keycloak:latest kindlyops/keycloak:$CIRCLE_BUILD_NUM
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push kindlyops/keycloak:$CIRCLE_SHA1
      - run: docker push kindlyops/keycloak:$CIRCLE_BUILD_NUM
      - run: docker push kindlyops/keycloak:latest
      - run:
          name: notify failed job
          command: ./notify-slack notifications "CircleCI pipeline for $CIRCLE_PULL_REQUEST failed in $CIRCLE_JOB" circleci
          when: on_fail
  havenapi-build-job:
    docker:
      - image: circleci/node:7-browsers
    steps:
      - checkout
      - add_ssh_keys
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker build --rm=false -t kindlyops/havenapi havenapi
      - run: docker tag kindlyops/havenapi:latest kindlyops/havenapi:$CIRCLE_SHA1
      - run: docker tag kindlyops/havenapi:latest kindlyops/havenapi:$CIRCLE_BUILD_NUM
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push kindlyops/havenapi:$CIRCLE_BUILD_NUM
      - run: docker push kindlyops/havenapi:$CIRCLE_SHA1
      - run: docker push kindlyops/havenapi:latest
      - run:
          name: notify failed job
          command: ./notify-slack notifications "CircleCI pipeline for $CIRCLE_PULL_REQUEST failed in $CIRCLE_JOB" circleci
          when: on_fail
  havenapi-testing-job:
    docker:
      - image: circleci/ruby:2.4
    steps:
      - checkout
      - add_ssh_keys
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Run tests
          environment:
            - POSTGRES_USER: circleci
            - POSTGRES_DB: mappamundi_dev
            - POSTGRES_PASSWORD: ""
            - POSTGRES_DATABASE: mappadmundi_dev
            - POSTGRES_USER: circleci
            - POSTGRES_PORT_5432_TCP_ADDR: localhost
            - KEYCLOAK_USER: admin
            - KEYCLOAK_PASSWORD: admin
            - PROXY_ADDRESS_FORWARDING: "true"
            - FLYWAY_URL: "jdbc:postgresql://localhost/mappamundi_dev"
            - FLYWAY_USER: circleci
            - FLYWAY_IGNORE_MISSING_MIGRATIONS: "true"
            - FLYWAY_GROUP: "true"
            - FLYWAY_SCHEMAS: mappa,1
            - HAVEN_JWK_PATH: /cfg/keycloak-dev-public-key.json
            - TEST_DATABASE_URL: postgres://circleci@localhost:5432/mappamundi_test?sslmode=disable
          command: |
            docker run -d -e POSTGRES_USER -e POSTGRES_DB -e POSTGRES_PASSWORD --name db circleci/postgres:9.6.4-alpine
            # wait for DB
            docker run --network container:db jwilder/dockerize -wait tcp://localhost:5432 -timeout 1m
            # start keycloak in background container
            docker run --network container:db -d -e POSTGRES_DATABASE -e POSTGRES_USER -e POSTGRES_PORT_5432_TCP_ADDR -e KEYCLOAK_USER -e KEYCLOAK_PASSWORD -e PROXY_ADDRESS_FORWARDING --name keycloak kindlyops/keycloak:$CIRCLE_SHA1
            # Wait for keycloak
            docker run --network container:db jwilder/dockerize  -wait tcp://localhost:8080 -timeout 2m
            docker run --network container:db -e FLYWAY_URL -e FLYWAY_USER -e FLYWAY_IGNORE_MISSING_MIGRATIONS -e FLYWAY_GROUP -e FLYWAY_SCHEMAS kindlyops/havenflyway:$CIRCLE_SHA1 migrate -placeholders.databaseUser=circleci
            # create dummy DB to work around https://github.com/markbates/pop/issues/175
            docker run --network container:db circleci/postgres:9.6.4-alpine /usr/local/bin/createdb -h localhost -U circleci circleci
            # creating dummy container which will hold a volume with config
            docker create -v /cfg --name configs alpine:3.4 /bin/true
            docker cp postgrest/keycloak-dev-public-key.json configs:/cfg
            docker build -t kindlyops/havenapitest -f havenapi/Dockerfile-hotreload .
            docker run --volumes-from configs --network container:db -e TEST_DATABASE_URL -e HAVEN_JWK_PATH kindlyops/havenapitest /go/bin/buffalo test
      - run:
          name: notify failed job
          command: ./notify-slack notifications "CircleCI pipeline for $CIRCLE_PULL_REQUEST failed in $CIRCLE_JOB" circleci
          when: on_fail
  deploy-staging:
    docker:
      - image: circleci/ruby:2.4
    steps:
      - add_ssh_keys
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install OpenShift client
          command: |
            wget https://github.com/openshift/origin/releases/download/v3.7.0/openshift-origin-client-tools-v3.7.0-7ed6862-linux-64bit.tar.gz
            tar xvzf openshift-origin-client-tools-v3.7.0-7ed6862-linux-64bit.tar.gz
            sudo mv openshift-origin-client-tools-v3.7.0-7ed6862-linux-64bit/oc /usr/local/bin/oc
            oc version
            # todo: authenticate
            oc login https://api.pro-us-east-1.openshift.com --token=$OPENSHIFT_TOKEN
            # this url suddenly started saying the only project available was mo1w
            #oc login https://console.pro-us-east-1.openshift.com/ --token=$OPENSHIFT_TOKEN
            oc project haven-production
      - deploy:
          name: Prerelease
          command: |
            oc set image deployment/havenapi havenapi=havengrc-docker.jfrog.io/kindlyops/havenapi:$CIRCLE_SHA1
            oc set image deployment/havenweb havenweb=havengrc-docker.jfrog.io/kindlyops/havenweb:$CIRCLE_SHA1
            oc set image deployment/keycloak keycloak=havengrc-docker.jfrog.io/kindlyops/keycloak:$CIRCLE_SHA1
      - run:
          name: notify failed job
          command: ./notify-slack notifications "CircleCI pipeline for $CIRCLE_PULL_REQUEST failed in $CIRCLE_JOB" circleci
          when: on_fail
workflows:
  version: 2
  builds:
    jobs:
      - webui-build-job
      - flyway-build-job
      - keycloak-build-job
      - havenapi-build-job
      - postgrest-build-job
      - havenapi-testing-job:
          requires:
            - flyway-build-job
            - keycloak-build-job
            - havenapi-build-job
            - postgrest-build-job
      - deploy-staging:
          requires:
            - havenapi-testing-job
            - webui-build-job
          filters:
            branches:
              only: master
      # TODO: port to circle 2.0
      # release:
      #   tag: /v[0-9]+(\.[0-9]+)*/
      #   owner: kindlyops
      #   commands:
      #     - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      #     - docker tag kindlyops/havenweb kindlyops/havenweb:$CIRCLE_TAG
      #     - docker tag kindlyops/havenweb kindlyops/havenweb:$CIRCLE_SHA1
      #     - docker push kindlyops/havenweb:$CIRCLE_TAG
      #     - docker push kindlyops/havenweb:$CIRCLE_SHA1
